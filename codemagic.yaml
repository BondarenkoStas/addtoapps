workflows:
    ios-prebuilt-flutter-module:
      name: ios_prebuilt_flutter_module
      environment:
        vars:
          CM_CERTIFICATE: Encrypted(Z0FBQUFBQmVwdXdZblB4ekNwVGJBRUZMZUhROG1zc2JmVmVJME9STXNPd3NqOWZNa2RPVnB5RTBQa3RkWDk5ZzRvLXE5ZzVTeVBiMlpUNlF6VUg4cWUzdXR5VlhkbkNYNFFWQV9GOWpaZTk3UndPcEcwbnFfRTB1VXlzY1Zac2tHaWNMbk1CXy0wMllMMXM4MmxVd1ptVWJpaVA3MDE3OHU1RXREQ0UyWXdTdy1XUjR5LXJKVzhpZ0JDNWhLY1BqNDlRQ21VMlNSMmFLLWFVYXNZYWYwcTlOVUk5VXhIemV6R2wzUXpsWHpRRTdPc1hoTjNxdWwycHJGNGkyZVBySG5WazMxQjRYZlp3SXZxUzFhV1gwMUplQm12SzRzT1BHRG5PZ3F5TFFxVlBNdDREWjQzbW13MUR5WWJuaEhnLWZiNFUtZERCVDZMTm1xczlXdE8zRTBjeXprNnVGelU5VGtPN0ktUG5ZT0IwR1cya19RaUU0eUpYaG1vUU85bGpFWlZXUjcwX2pfZ185czZjOUVaTXpwemRjVHB3RGx6MVV1R0Vrek1fdHRlX2F0OHd0LVpUQkdrdjZZSnJvTG1hWk40TTd5MzY5Zll5alBnZHJJdmpXakMxSy05N1RRM0l0dFpFQVZWODNudlV4Y1JjVDZJNG1kMGszak9KMG8wQWNDLVpuc1dvQUJtVFRZNkVyeDRaWVAtVFlWb00yVjk3LVJrU0ZJeXlKcVdTcWhNUmljTVRnQkhUbWxEOWJvUTFzVk5OR0tSYzNEaEZOMFdkSnF6RDgyWGtBam5zQV9hX0F0aTlweGtQTlhWbXNycy00QWlweG9RanZoNGJlS0hvSmI2Znhnb3lNbTloSjVta2taUzFabzhScVhDNUQ1LU9Qbk9pWGRsSVBMaW9Lc3pGb2F1LUFlMHJIbkluemdyMUJMWWZNZW1FY2JFNjhMbDh6SmNDZFZkaDlZVVZ6S0RnODVIYWRKT1gtZ0xRRXB4WnhnSUY3Q3VpS1JCNHcyU2lZYkJnT05tVDBHTms2WnNiekhMQ0NwaUVvc25pMGlyY3piY2h2SFpwT0NPQmNWUWFrRExMM0ZJd0NXd2NLVDFuaUFCZ1RxT20wQjNVUVVZZzVUeFdqNGJrdEtpb3ZpTWlUMzFtV09KdmZWRDVOT2dCODlYeU1LR09PTF9VQWFBaWdJRFJrN2ZGdGhpdWJEY1Z5SHdtVnVDcEd1VGtQY0lubEhDQnR5NTNlM250X1lOeUxiRlp5akozakNlRWVCd0FLUWhYSFhnM1hEMUZBTmt2ckNMMlBwdHVTUWJCQm5EdWE5S0lFaDRnNjR2VHBsVzVMTVVpUlEzU0U3NWdnWThlbDVROW56MGZ1dUJHM1pCdUR3ektJY0xtU0pNNkZyN2Y4eGdQdFZqVzdkQ2lDbndSQTFuLVhQTGVuOTBJd0hvWktrWHdRTXpQTm1ZOFE3OGE5ZUxpYXR3clVIR014Q0xZbW05T2otT2ZmQ2hGSWh5UW03djZMdkp0Q1dqOFQyU19HSk1IQXRwbEljZWZkVGo0WjhDVzRiSE52c0YxdmN5elRXYWo3Ynh3VGhudVZqTzRZemhZU2tBcGE5V0xlaDg0bmVUZkZkVWszbi1qa0NqSmJ3TG41d0lQYXFISVFTUUpmODFNUDBjVWRvcmsxcjM2RjA1aFlGcHRsVXA3bmRwNDZZMm5IWVJCdzQwTkFQUGJoc3Z5STlycVdPOXBMelRLY3pfOWZySkNDR3Mtck9HT3NfWkUycWVDWDB2c2o2RHpfRXBVZjV4bmhlVXE2Q0lxYnYtOGxnTEdqamZMekhfWlZ5dElEbi12X1pDLUhzVDlhOEozenVMN00zcDdaQVBlRjJ5N1l4TmlGUU5EcDF2Y2JQT3RDMXlDaWRHdFhWM3VDTGlQMWxvMDhNbkJkSTJWQ0xKZy1KWTBFdVY4a09qaXlsNVlvRnVjakhUZkpiMVJjU2tNZlRPTGRiZ2ZYRUs1MTdsaUkwQ1NuZGtMdHJjY2VVZWZScE9sN2FMY3BwQTBDSkt0ZWtBR3pPTHJyOTk5MEoyTjdodGltMm43MXZnN3pMYUxYQzQwc2lKRGQ3dDFoaWoxc0FQVWJpMW9lUkd4OUpjOUFrU3ltXzg2bUpqNmNJQkdLams2UU9GaFU0cEhleXAyUnE1cVpvLTFETzJYN1BWOThMVExySzJwWEdlSHI1dmk1NF8yUFZtVFg3T0dlVmU2dTNxcm9ULTE4OEVuNHJLWGRlbndFdkxsM2Nza0R6aDlUTGhWNm9RMGtLd3pMMWV5Wmtjc2I4eS1FanpRa0VKeEY5dVR1WTRTZUZRbEpyQm9PVUhkVE9YNFc0bFQ2SVYxWlZxSjhJcUdNdURVNmhSd0pxS3JMSTQydVZRRzNrcUpRX09SUlFPVjFpU28zcGg2cjB4dW5HRi1KLUJXSmNUREVyOFFkeWVHWmlZZGxRVS1VeEc0aGZoMTRjLUJERmhEQURPVVBtRC1ETFNWNE1ZTjZiUUVPbEc1M3k4WHA0aFZ4UzY5TGdGeHFIVkYxSTV3Yk5PRTU0OS1fYU1Hb0Y1MFV4cnBQSzdzR1hIWGhWcmROaG9CRW4zZHJ4RkozYjRWYW5XRlhEbGFkdVBqSEN4dGVuaU96UHJUMVJnQWxzU3RwM3M4SHpnS29DN0tONlhvS2stQnFJLVpzUEZqTlhEZ09KWnJ3dWFUMkFkamFlN2FZSUU4NFc0Yjh0MWhFcEdVLWRWOGpLVGJ2Mk4xQVdzNG1CcnBBRVo2RzhVTUVWVkZkYldJd3FkOXMwclBoOTVienNqanpaMk1qTWk3aEdVMll4OG5XT2JKSm9la3dLMm5lOEkyaGE1VFB6c0J2VHNnWVVIYjVMak5lRFZhV3NrQUxWeWloVnBBNjdOM0p5bS1QOHpYZFNTVkpWdkg2ajlqQXg3R3g4ZjRLR2xySlpFMVpSOVljZUlBdVpLOFFESXdfM29vci1sbjB6am1FLXJQbVNUWGFiMmVEME5IYlctZGY0ZFFSUjVDWjgtS0I0YnEzdndIUmw0QVFSWUxWeWZ6blFFcXZpdVFLZjlORXFzWFkwQjhuVVdoUC1NVnVzLXdmbXk2Z0JpUk9BNnQ4LUlfa2FUNk53QVdWZnhPcHMxNGc1Q1JwcVRYN1BkVXpybHc3MkRrSVJTYTVZd3hZd29IeFY4M3lLS2NmRWVpdDczU2c4VFo3SEpVMUZadGgtZVp5N3pzWDJidjJ4bnBwbGhQdXpNdzVGOFhFSzg5SlFaYWZDRnBZV3JqRk9KeUlVcWlEbjRKcFhjdGJ0SGkzYllwY0NvV1M4dFpsWTRsMzVkRF82d2xXSThEZktNSUdxa2tjSVNuc19NWnNkOTNQWmNNenhCeGFNNVNKMDh0dW5WR3JzaTJKaG5vNDZEbmdhbm9YV0JLQTJkeDNzREw5WS1wbWFUV054MEJSUEhvY0hKZU1YY09ZMkxuU25qNFpHQTZublNDOTJkVnZhaVIxb1R2T0RXNFFYSlBRYl9rSUt0Wks3OEtFQjVpVzVSMEs5a1RjRVI0NEJiUkxab2NQaU1ZcDhuQTFUSUwyS1RRdm5SdE5haFluQUFFQm1wYVhocVYtLU5GNE9lR2d0amladFp0Ykd4UWY3eXNEcVVzQ3hsMHVGVU9STTNsZnZfNk8wZ0ZzbmRIMHBOb2I4VXhLZnBZUzhwM2dISXVUUC1NY1Q5V0NuM3N1SUVEc0ZDTlQ2Ylo2dU5CSWN4cG42M24yMElzdG5JMDJvc3FuQ1J0VHV2Sk02S0FkZUczRElwclFEUnhfVlVKbEY0ZDVPZUI5OW1hZjloQkE5RlctMVByeW03bUpmTXRhelhJNWRvaDdjRDhZR04xX1NlczdoN3BuUVJ6LWVjS01wN05wY29zeGx4Q3lMTWtMaTJwcVV6c2lPMVdKVWdWNEpjS1djYS0yQzFYZ2pOTjVXeHFYNUdBWExnOGs0c3dYWDE3ZnUtVUZjXzVtbFhueDloUU4zNnNhN3dqNUZoeEVvc3VNekFQTFlXelBxcVFWSmJvOVk1VlRMdzZHemZqWi1xSWN3V0ZjNEpuUURqQ0VTMXlhLTlqbUhsOUMyczJsVG5FRG5sYjVsWmhsdTZubzI3TU9MQmhtZld1SWZ1R0JtS25taFJCeEVFWk5YVHZpOW15cnpaSDBKZmdfRjhsbU1WdUZXTFpBU0tEOFVvMG1pX3daUmRfemdqLVRWeXgwQm1zSWlWc2lxaFhrWjlRZkdubXNaaThjVkh0R2hsVGlSRWlUSGVHYmZjY2tHQVFhekxsSjNYT3N4RXVfelM0S1hUM2V1QkNwOEJub2I3ZEo2NkJSVFB2dlJrWmtKZmkyaFR4NXZhc2VRRlQ2MnBhaHN6UktpNkhfS3NjLTdZVnhOX3pITXVYNVplY3RpZ00xV3dVdVI2Qi1hQUhHTnFQUlZKRUY3a25GVjlMWTFyZmdBRDdJVWYyaVpiMWNQZW8wdlJMWV9EYkh3NDFjZ2hfWlVQQVZKWlBVN0lkcE54SUZBSE9VUWlFTjVqZ2NOSjNCZE1YdkZ6dnlGeHVUWUEtdGpONkUyZ0tST0ZFMDJhOVpCQkhwQUtBd1Rld0RRUHVFcTBuelJVM3MwT0hObmRad1UzSV9LTkc0ZWR6Y2l3SEVnZEp2QjBaSXd6R1dIdXVIZnU0UmE3TGt2TjU1MnhBTENpV25lU2lNVFpwbUh1T2xEMm42TzNDZGJ6aEQ2ZWVsdUszeDdNbTFhNWtUQ2tJRk1LTUt4d0JhWHBBcWFKQnJnT2VwSXZJc2xWWk9QdkNYem5vUEttT21ZYXlhRlpKVDZ3N04ySEFSTlQxTUhtUVliVV9nSTZPenV2NG1pdjZYd09ua29EQWM5bmF5eHZhMWFFMjNPX0k2dnJmUjJwZVVVYXlKZU1IZGxNOHUxMXJCYmNFQVNZeFJjeEM0UmI0c3NrVmc0SVl3OVpIMWQzb1VsRzU1by1rNG1aQVBmcWhWYUJhSFdFdUhQYU9tRDRlaE1EMm1WOU1QbVhQVGxSVE5nNXM2anQyeDhXdkN1dlExVkE2NEY5anVrWV9weXhnQkNyeV9TOGwzRjBEaFhhSzdDWnNYd25oXzBYUlNrY0hCa2hGVG9neGVMel9Cek13cnpObmFNTmd1Ny1CZXMwTHc3SDZ1QWNBaUJBamJwYmVDX1JnOUY0Y1FCdE5mWXFvVXNmTldLalcycTBCeFdJQlJDbmZVWW5YSGk1SFkydmNRUldsOHJFdFFpWVVTZU1ZWm45NExhbG5IU2toczVEMVlVX0pTekFmZmZIVUhObjg1SmlHcTV6cjJpNlFrX2kwaHphN1A2b2xNeVJRMUQ3aWtvVWVzWjB1bktvcnRMTjdFbFZiX0Y0c0tsVVhhZE1RaHpuaVdZUHVpTlhvbFRnbEZwYThabHlsaUh4LVpEQWVVakQ0U3RXdmx5dzNkdUI1NlpXRFhFRlB6QWFfYm5NNjBwRUJ0TWw2VWpFN2dVWWw5NHBJVjYyZ1kwWVVJZVBHQ1FEUVg0aTA0d1Qyb1hlVXdmdzFFSEZTaTMtdzRZcFBVek1zamV4QzN2ZmZ0N3RRRDFfRVpTT0F5SHV4OURVZl9DdlVxZ05hLTBMZ1hYQkQwcVB4cjRnNnJJTU14VjFCa2pNdUFLbFpLRm50cXNTUEUtRU9iRi1RODNheHlpZTVvWk92a3FpVzFYNFVVeVJCY1FVZEJHSlhLSEZQb0NWX3NYdmFoOGNWTF9yNWJXODlZMkw0aHI5YWVIcGU1bHVSbDNPcTNja3pwei1Iai1EdFZuMlFIenNWWmlWeXBVYTBoLWo1UzVLUGpGQmdnS2RTaTNaM09ueGNxNS1kTDVPcXhXX0JTX3pFVHdnSkJ3dHgwb2p5eXNDQ3dyTDJXLW8xd1o4ZTFST0hRMG1ET1ZFT25DX2hHdHgyUFZIY3JCdU00U0hKSFUzd0dQOURQMVcwSjliSGROd3kxMFhZUlYtaS05NExkQnpjYWw4Q0dIbFpCdWF0cGNWRmpRWkVtbk5lam9fdy1Dekw3aVVneGZybHZCSWw0NmF6aE1FdGM4RXl1Unl3a3YxUHIyYnEydDJaLU5YTlZSVEduUFl2dlMzeVZwWW1NRng5ejZLZ2tzeG5pM0IxRkQ2OFotS0ZPQnNJSnN3MmhLUzVRVTdCYXJDNnY4TkRNdkZjUXMxMENQYnZtVERySnpVWGVDenJ4bU13U3pHeGxGNndERW1Wb1M2VjdFRzg0VFRSbHVKWXN5aDA5OVZLZWt5OWpwS2gyNnQ2Ylh5NHpPOHhPaDhTMGF1NHhMVE1sT3ZpOFl2VlFsT2s5U2JISExXanJqbVdra3lLQW1IZWZkOW8zbHVPWU1lanZXU1Blak51ZnBRTElEc0tLWVNLWTVzRm5iUWF5enNSblo0MWM4MXp0dlE0aV9yWERMZlZDakQ2WUhNM1RuMG9aVkpDajRLWHgxOUxLRi1lLWNpNjNHUkRXZlo1S21DQ01FOEdBWWxOTk0tc0g0YVNqendyM0l2MTZ0azhhLTVUalNBdXJZZGJlRDZIM2tTQ3c1VFhTS0RuM0xLTmYyc3NLYmxwRk84R0h4MXh5RDlZTFBLQmZsazh6QzNQSUxaWEpXMjNMbmtjRE51cy1VbzdERzRsN2dQR3ZYLVFZbk9HUm83UEhOQm1fOU9RNm1OMjc5cmVoRnROSUstT0ZYaHVNNFRseW1FckZVcm5sZmhRc0Y1Wl9ydWJzQy1nSzhubndEdE5sSF9vN0dmOHRCR3pPVmxyX0p3TnVoTWJFWDR5a1VRRjhuclNoY3gza3g4bm5Bb21Va2RmdWhPMlpzeE91RS16V1FScG9IWEp1bWQxcVRDbTlCQzVYS3IyclRCa19MV0FrWUNockl4YkpOV1p2eEFna1VFT3IyN2dwbXQzLU56ZGJGM0Z6RlpSYkpUWnVOTXBWSjdfQkZfMG9ueTFFdWdweHo0bFkycndsb0hrNDI2Y1BGbXYtSzlUVUJFVlZFX2p0T2J4b3g4WlFhZTZjdFF4RlFVZEpOV2t2ZWhQZVE5eGVtVUFPeEgwYXNGcEQwLVhzQmV1OEhnOUpUN3p6ekNGVWMtdmctdXExcC1jZkRSX0xPYlpONU14Yjd4eUtsQzY1R21mZE52V0FjNnZGX05Dbkszc1huYlJOQ0hrbk1JNnJZQklwUkpSV0dtMV9QXzRaQmlHTXQ1R25WU1dFQW13RXR2VGRFcHpIUkRWeGV0aG5BWElmYllEaEt0Ul9RNDdqZlJqMFZzS092Q3BtdXJaWFJ4anNHc2JDOFhxb1E0ZHVFeXFLclBvck1lNXdHNGVENnNnaTJ6WGdPUXhFSVNwQmJLckI2WFF3bHdqc1lKNHZSTFBVeUcxUVBkNFYzVUpoamt2QTh0d0hLWWs2MzhfendlUDFGWU1lcGZ4WjlmalhuVUlEUmRsOHJNUVBOeV91SDJZclZLSE1MdkdqbDZfVGlKemZjQ3NUSWJES0JDal9MWUw0UjBCa0hkMlBMa2dYa3U4WHJZRkJKSmZJU3dNYUM0SmpJUnJmaVlCOXJtbjRpTkNjTm1KZ29NYnBxeTJ5X1pROHlGUXZUb25QWG9aSmhaalBDMWNtYnlJX2dMT0lrWndQTGg1MFhTWWRVTllLXy0yUkZUZWFsMDZxVWhDWnRyajBrQT09)
          CM_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmVwdXdZN2hfdFktY0VSSGhBWHBnQnA2Y1phTGx3czJiNHlGNVhFaU9IRlZLaVVmbk8xZ0Q1eXpFR3NDSjBEeXJaOHJlNXdDVExZNDZGLVU4Wm5VWHRoZGp4WHc9PQ==)
          CM_PROVISIONING_PROFILE: Encrypted()
        xcode: latest
        cocoapods: default
        flutter: stable
      triggering:
        events:
          - push
        branch_patterns:
          - pattern: 'ios_prebuilt_flutter_module'
            include: true
            source: true
      scripts:
        - keychain initialize
        - |
          # set up provisioning profiles
          PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
          mkdir -p "$PROFILES_HOME"
          PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
          echo ${CM_PROVISIONING_PROFILE} | base64 --decode > $PROFILE_PATH
          echo "Saved provisioning profile $PROFILE_PATH"
        - |
          # set up signing certificate
          echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
          keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
        - |
          cd flutter_module
          flutter packages get
          flutter build ios-framework --output=$FCI_BUILD_DIR/ios_using_prebuilt_module/Flutter
        - xcode-project use-profiles
        - xcode-project build-ipa --project "ios_using_prebuilt_module/IOSUsingPrebuiltModule.xcodeproj" --scheme "IOSUsingPrebuiltModule"
      artifacts:
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log